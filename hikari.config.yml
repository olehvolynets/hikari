# shared/reusable types.
# To use a shared type it must be referencd `as: <name>`
#  so with the example type it would be `as: severity`
types:
  - name: severity
    type: enum
    variants:
      - name: DBG
        fg: orange
        bold: true

# type of events and scheme of their rendering
events:
  - name: ReqLog
    matcher:
      event: RequestLog
    scheme:
      - name: severity
        prefix: "["
        postfix: "] "
      - name: ts
        type: time
        fg: white
      - name: status
        fg: green
        prefix: " "
      - name: method
        prefix: " "
      - name: path
        prefix: " "
      - name: took
        type: duration
        bold: true
        prefix: " "
      - name: location
        optional: true
        prefix: " to: "
      - name: event
        skip: true
      - name: msg
        skip: true
      - name: traceId
        skip: true
      # - name: ts
      #   type: datetime
      # - special: rest
  - name: ServerStart
    matcher:
      event: ServerStart
    scheme:
      - name: severity
        prefix: "["
        postfix: "] "
      - name: ts
        postfix: " "
      - name: ip
        fg: green
      - literal: ":"
        fg: green
      - name: port
        fg: green
      - name: msg
        skip: true
      - name: event
        fg: blue
        prefix:
          literal: " ("
          fg: white
        postfix:
          literal: ")"
          fg: white
  - name: ServerShutdown
    matcher:
      event: ServerShutdown
    scheme:
      - name: severity
        prefix: "["
        postfix: "] "
      - name: ts
      - name: msg
        prefix: " "
      - name: event
        fg: blue
        prefix:
          literal: " ("
          fg: white
        postfix:
          literal: ")"
          fg: white

  - name: ServerStop
    matcher:
      event: ServerStop
    scheme:
      - name: severity
        prefix: "["
        postfix: "] "
      - name: ts
        postfix: " "
      - name: event
        fg: blue
        prefix:
          literal: " ("
          fg: white
        postfix:
          literal: ")"
          fg: white
      - name: msg
        skip: true
  - name: DBTrace
    matcher:
      event: DBTrace
    scheme:
      - name: severity
        prefix: "["
        postfix: "] "
      - name: ts
        postfix: " "
        fg: white
      - name: query
        fg: magenta
      - name: args
        optional: true
        prefix: " ["
        postfix: "]"
      - name: took
        fg: white
        bold: true
        prefix: " "
      - name: error
        optional: true
        prefix: " "
      - name: event
        skip: true
